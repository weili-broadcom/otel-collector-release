---
name: otel-collector-windows

templates:
  config.yml.erb: config/config.yml
  ingress_port.yml.erb: config/ingress_port.yml
  otel-collector.crt.erb: config/certs/otel-collector.crt
  otel-collector.key.erb: config/certs/otel-collector.key
  otel-collector-ca.crt.erb: config/certs/otel-collector-ca.crt
  prom_scraper_config.yml.erb: config/prom_scraper_config.yml

packages:
- otel-collector-windows

properties:
  enabled:
    description: "Enable OTel Collector"
    default: true
  limits.memory_mib:
    description: "Memory limit to apply to this process, in mebibytes."
    default: 512
  limits.cpu:
    description: "Controls how many CPU cores this process can use simultaneously."
  config:
    description: "Collector configuration"
    default: {}
    example: |
      receivers:
        otlp/placeholder:

      processors:
        batch:

      exporters:
        otlp:
          endpoint: otelcol:4317

      service:
        pipelines:
          traces:
            receivers: [otlp/placeholder]
            processors: [batch]
            exporters: [otlp]
          metrics:
            receivers: [otlp/placeholder]
            processors: [batch]
            exporters: [otlp]
  allow_list.processors:
    description: "Processors allowed for use in otel-collector config. Must be a subset of list included in otel-collector builder config. Empty list means allow all possible."
    example: ['batch']
  allow_list.exporters:
    description: "Exporters allowed for use in otel-collector config. Must be a subset of list included in otel-collector builder config. Empty list means allow all possible."
    example: ['otlp', 'prometheus', 'prometheusremotewrite']
  allow_list.extensions:
    description: "Extensions allowed for use in otel-collector config. Must be a subset of list included in otel-collector builder config. Empty list means allow all possible."
    example: ['pprof']
  ingress.grpc.address:
    description: "Address to listen on to receive OTLP over gRPC"
    default: 127.0.0.1
  ingress.grpc.port:
    description: "Port the collector is listening on to receive OTLP over gRPC"
    default: 9100
  ingress.grpc.tls.ca_cert:
    description: "CA root required for key/cert verification in gRPC ingress"
  ingress.grpc.tls.cert:
    description: "TLS server certificate for gRPC ingress"
  ingress.grpc.tls.key:
    description: "TLS server key for gRPC ingress"
  telemetry.metrics.level:
    description: "Level of metrics the collector exposes about itself"
    default: "basic"
  telemetry.metrics.port:
    description: "Port to serve the collector's internal metrics"
    default: 14830
  secrets:
    description: "Variables to interpolate into the configuration"
    default: []
  prom_exporter_config:
    description: "Prometheus exporter to be added to the collector config"
    default: {}
    example: |
      prometheus/test:
        endpoint: ":12345"
        add_metric_suffixes: false
  prom_exporter_tls.ca_pem:
    description: "CA root required for key/cert verification for prometheus exporter"
  prom_exporter_tls.cert_pem:
    description: "TLS server certificate for prometheus exporter"
  prom_exporter_tls.key_pem:
    description: "TLS server key for prometheus exporter"
  metric_exporters:
    description: "Exporter configuration for aggregate metric egress. Deprecated, please use 'config' property."
    default: {}
    example: |
      otlp:
        endpoint: otelcol:4317
      otlp/2:
        endpoint: otelcol:4318
  trace_exporters:
    description: "Exporter configuration for aggregate trace egress. Deprecated, please use 'config' property."
    default: {}
    example: |
      otlp/trace:
        endpoint: otelcol:4317
      otlp/trace2:
        endpoint: otelcol:4318
